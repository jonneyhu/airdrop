"use strict";
var __importDefault = (this && this.__importDefault) || function (mod) {
    return (mod && mod.__esModule) ? mod : { "default": mod };
};
Object.defineProperty(exports, "__esModule", { value: true });
const Base_1 = __importDefault(require("../Base"));
const L1ToL2Watcher_1 = __importDefault(require("./L1ToL2Watcher"));
const L2ToL1Watcher_1 = __importDefault(require("./L2ToL1Watcher"));
const L2ToL2Watcher_1 = __importDefault(require("./L2ToL2Watcher"));
class Watcher extends Base_1.default {
    constructor(config) {
        super(config.network, config.signer, config.chainProviders);
        let { sourceChain, destinationChain } = config;
        sourceChain = this.toChainModel(sourceChain);
        destinationChain = this.toChainModel(destinationChain);
        // L1 -> L2
        if (sourceChain.isL1) {
            this.watcher = new L1ToL2Watcher_1.default(config);
        }
        // L2 -> L1
        if (!sourceChain.isL1 && (destinationChain === null || destinationChain === void 0 ? void 0 : destinationChain.isL1)) {
            this.watcher = new L2ToL1Watcher_1.default(config);
        }
        // L2 -> L2
        if (!sourceChain.isL1 && !(destinationChain === null || destinationChain === void 0 ? void 0 : destinationChain.isL1)) {
            this.watcher = new L2ToL2Watcher_1.default(config);
        }
    }
    watch() {
        if (!this.watcher) {
            throw new Error('not implemented');
        }
        return this.watcher.watch();
    }
}
exports.default = Watcher;
