export interface IResult {
    id: string;
    symbol: string;
    name: string;
    image: string;
    priceUsd: number;
}
declare class CoinGecko {
    private _baseUrl;
    private _maxPerPage;
    private _maxPages;
    private _tokenSymbolAddressMap;
    private _nonEthTokens;
    getPriceByTokenSymbol: (symbol: string, base?: string) => Promise<number>;
    getPricesByTokenSymbol: (symbols: string[], base?: string) => Promise<number[]>;
    getPricesByTokenAddresses: (allAddresses: string[], base?: string) => Promise<number[]>;
    getAllTokenPrices: (base?: string) => Promise<IResult[]>;
    getTokenInfoById: (id: string) => Promise<{
        name: any;
        symbol: any;
        contractAddress: any;
    }>;
    private _normalizePrice;
}
export default CoinGecko;
//# sourceMappingURL=CoinGecko.d.ts.map