"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const constants_1 = require("../constants");
const ethers_1 = require("ethers");
const config_1 = require("../config");
class Token {
    constructor(chainId, address, decimals, symbol = '', name = '') {
        var _a, _b, _c;
        if (chainId) {
            this.chainId = Number(chainId);
        }
        if (address) {
            this.address = ethers_1.ethers.utils.getAddress(address);
        }
        if (symbol) {
            this.symbol = symbol;
        }
        if (name) {
            this.name = name;
        }
        else if (symbol) {
            this.name = symbol;
        }
        if (decimals) {
            this.decimals = decimals;
        }
        if (!decimals && symbol) {
            this.decimals = (_c = (_b = (_a = config_1.metadata.tokens) === null || _a === void 0 ? void 0 : _a[constants_1.Network.Mainnet]) === null || _b === void 0 ? void 0 : _b[symbol]) === null || _c === void 0 ? void 0 : _c.decimals;
        }
    }
    get canonicalSymbol() {
        return Token.getCanonicalSymbol(this.symbol);
    }
    static getCanonicalSymbol(tokenSymbol) {
        const isWrappedToken = [Token.WETH, Token.WMATIC, Token.WXDAI].includes(tokenSymbol);
        if (isWrappedToken) {
            tokenSymbol = tokenSymbol.replace(/^W/, '');
        }
        if (tokenSymbol === 'XDAI') {
            tokenSymbol = 'DAI';
        }
        return tokenSymbol;
    }
}
Token.ETH = 'ETH';
Token.WETH = 'WETH';
Token.MATIC = 'MATIC';
Token.WMATIC = 'WMATIC';
Token.XDAI = 'XDAI';
Token.WXDAI = 'WXDAI';
Token.USDC = 'USDC';
Token.USDT = 'USDT';
Token.DAI = 'DAI';
Token.WBTC = 'WBTC';
Token.sBTC = 'sBTC';
Token.sETH = 'sETH';
exports.default = Token;
