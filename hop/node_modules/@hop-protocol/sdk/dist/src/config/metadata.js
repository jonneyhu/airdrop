"use strict";
var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
}) : (function(o, m, k, k2) {
    if (k2 === undefined) k2 = k;
    o[k2] = m[k];
}));
var __setModuleDefault = (this && this.__setModuleDefault) || (Object.create ? (function(o, v) {
    Object.defineProperty(o, "default", { enumerable: true, value: v });
}) : function(o, v) {
    o["default"] = v;
});
var __importStar = (this && this.__importStar) || function (mod) {
    if (mod && mod.__esModule) return mod;
    var result = {};
    if (mod != null) for (var k in mod) if (k !== "default" && Object.prototype.hasOwnProperty.call(mod, k)) __createBinding(result, mod, k);
    __setModuleDefault(result, mod);
    return result;
};
Object.defineProperty(exports, "__esModule", { value: true });
exports.metadata = void 0;
const hopMetadata = __importStar(require("@hop-protocol/core/metadata"));
exports.metadata = {
    tokens: {
        kovan: hopMetadata.kovan.tokens,
        goerli: hopMetadata.goerli.tokens,
        mainnet: hopMetadata.mainnet.tokens,
        staging: hopMetadata.mainnet.tokens
    },
    networks: {
        ethereum: {
            name: 'Ethereum',
            isLayer1: true
        },
        arbitrum: {
            name: 'Arbitrum',
            isLayer1: false
        },
        optimism: {
            name: 'Optimism',
            isLayer1: false
        },
        xdai: {
            name: 'xDai',
            isLayer1: false
        },
        polygon: {
            name: 'Polygon',
            isLayer1: false
        }
    }
};
