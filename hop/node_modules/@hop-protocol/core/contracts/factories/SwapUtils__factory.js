"use strict";
// @ts-nocheck
/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
Object.defineProperty(exports, "__esModule", { value: true });
exports.SwapUtils__factory = void 0;
const ethers_1 = require("ethers");
const _abi = [
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "tokenAmounts",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "fees",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "invariant",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "lpTokenSupply",
                type: "uint256",
            },
        ],
        name: "AddLiquidity",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "tokenAmounts",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "lpTokenSupply",
                type: "uint256",
            },
        ],
        name: "RemoveLiquidity",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "tokenAmounts",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "uint256[]",
                name: "fees",
                type: "uint256[]",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "invariant",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "lpTokenSupply",
                type: "uint256",
            },
        ],
        name: "RemoveLiquidityImbalance",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "provider",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "lpTokenAmount",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "lpTokenSupply",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "boughtId",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "tokensBought",
                type: "uint256",
            },
        ],
        name: "RemoveLiquidityOne",
        type: "event",
    },
    {
        anonymous: false,
        inputs: [
            {
                indexed: true,
                internalType: "address",
                name: "buyer",
                type: "address",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "tokensSold",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint256",
                name: "tokensBought",
                type: "uint256",
            },
            {
                indexed: false,
                internalType: "uint128",
                name: "soldId",
                type: "uint128",
            },
            {
                indexed: false,
                internalType: "uint128",
                name: "boughtId",
                type: "uint128",
            },
        ],
        name: "TokenSwap",
        type: "event",
    },
    {
        inputs: [],
        name: "A_PRECISION",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MAX_A",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MAX_ADMIN_FEE",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MAX_SWAP_FEE",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "MAX_WITHDRAW_FEE",
        outputs: [
            {
                internalType: "uint256",
                name: "",
                type: "uint256",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
    {
        inputs: [],
        name: "POOL_PRECISION_DECIMALS",
        outputs: [
            {
                internalType: "uint8",
                name: "",
                type: "uint8",
            },
        ],
        stateMutability: "view",
        type: "function",
    },
];
class SwapUtils__factory {
    static createInterface() {
        return new ethers_1.utils.Interface(_abi);
    }
    static connect(address, signerOrProvider) {
        return new ethers_1.Contract(address, _abi, signerOrProvider);
    }
}
exports.SwapUtils__factory = SwapUtils__factory;
SwapUtils__factory.abi = _abi;
