/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  ethers,
  EventFilter,
  Signer,
  BigNumber,
  BigNumberish,
  PopulatedTransaction,
  BaseContract,
  ContractTransaction,
  Overrides,
  CallOverrides,
} from "ethers";
import { BytesLike } from "@ethersproject/bytes";
import { Listener, Provider } from "@ethersproject/providers";
import { FunctionFragment, EventFragment, Result } from "@ethersproject/abi";
import { TypedEventFilter, TypedEvent, TypedListener } from "./commons";

interface TestLibBufferInterface extends ethers.utils.Interface {
  functions: {
    "deleteElementsAfterInclusive(uint40,bytes27)": FunctionFragment;
    "get(uint256)": FunctionFragment;
    "getExtraData()": FunctionFragment;
    "getLength()": FunctionFragment;
    "push(bytes32,bytes27)": FunctionFragment;
    "setExtraData(bytes27)": FunctionFragment;
  };

  encodeFunctionData(
    functionFragment: "deleteElementsAfterInclusive",
    values: [BigNumberish, BytesLike]
  ): string;
  encodeFunctionData(functionFragment: "get", values: [BigNumberish]): string;
  encodeFunctionData(
    functionFragment: "getExtraData",
    values?: undefined
  ): string;
  encodeFunctionData(functionFragment: "getLength", values?: undefined): string;
  encodeFunctionData(
    functionFragment: "push",
    values: [BytesLike, BytesLike]
  ): string;
  encodeFunctionData(
    functionFragment: "setExtraData",
    values: [BytesLike]
  ): string;

  decodeFunctionResult(
    functionFragment: "deleteElementsAfterInclusive",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "get", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "getExtraData",
    data: BytesLike
  ): Result;
  decodeFunctionResult(functionFragment: "getLength", data: BytesLike): Result;
  decodeFunctionResult(functionFragment: "push", data: BytesLike): Result;
  decodeFunctionResult(
    functionFragment: "setExtraData",
    data: BytesLike
  ): Result;

  events: {};
}

export class TestLibBuffer extends BaseContract {
  connect(signerOrProvider: Signer | Provider | string): this;
  attach(addressOrName: string): this;
  deployed(): Promise<this>;

  listeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter?: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): Array<TypedListener<EventArgsArray, EventArgsObject>>;
  off<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  on<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  once<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeListener<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>,
    listener: TypedListener<EventArgsArray, EventArgsObject>
  ): this;
  removeAllListeners<EventArgsArray extends Array<any>, EventArgsObject>(
    eventFilter: TypedEventFilter<EventArgsArray, EventArgsObject>
  ): this;

  listeners(eventName?: string): Array<Listener>;
  off(eventName: string, listener: Listener): this;
  on(eventName: string, listener: Listener): this;
  once(eventName: string, listener: Listener): this;
  removeListener(eventName: string, listener: Listener): this;
  removeAllListeners(eventName?: string): this;

  queryFilter<EventArgsArray extends Array<any>, EventArgsObject>(
    event: TypedEventFilter<EventArgsArray, EventArgsObject>,
    fromBlockOrBlockhash?: string | number | undefined,
    toBlock?: string | number | undefined
  ): Promise<Array<TypedEvent<EventArgsArray & EventArgsObject>>>;

  interface: TestLibBufferInterface;

  functions: {
    "deleteElementsAfterInclusive(uint40,bytes27)"(
      _index: BigNumberish,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    "deleteElementsAfterInclusive(uint40)"(
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    get(_index: BigNumberish, overrides?: CallOverrides): Promise<[string]>;

    getExtraData(overrides?: CallOverrides): Promise<[string]>;

    getLength(overrides?: CallOverrides): Promise<[number]>;

    push(
      _value: BytesLike,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;

    setExtraData(
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<ContractTransaction>;
  };

  "deleteElementsAfterInclusive(uint40,bytes27)"(
    _index: BigNumberish,
    _extraData: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  "deleteElementsAfterInclusive(uint40)"(
    _index: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  get(_index: BigNumberish, overrides?: CallOverrides): Promise<string>;

  getExtraData(overrides?: CallOverrides): Promise<string>;

  getLength(overrides?: CallOverrides): Promise<number>;

  push(
    _value: BytesLike,
    _extraData: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  setExtraData(
    _extraData: BytesLike,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<ContractTransaction>;

  callStatic: {
    "deleteElementsAfterInclusive(uint40,bytes27)"(
      _index: BigNumberish,
      _extraData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    "deleteElementsAfterInclusive(uint40)"(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<void>;

    get(_index: BigNumberish, overrides?: CallOverrides): Promise<string>;

    getExtraData(overrides?: CallOverrides): Promise<string>;

    getLength(overrides?: CallOverrides): Promise<number>;

    push(
      _value: BytesLike,
      _extraData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;

    setExtraData(
      _extraData: BytesLike,
      overrides?: CallOverrides
    ): Promise<void>;
  };

  filters: {};

  estimateGas: {
    "deleteElementsAfterInclusive(uint40,bytes27)"(
      _index: BigNumberish,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    "deleteElementsAfterInclusive(uint40)"(
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    get(_index: BigNumberish, overrides?: CallOverrides): Promise<BigNumber>;

    getExtraData(overrides?: CallOverrides): Promise<BigNumber>;

    getLength(overrides?: CallOverrides): Promise<BigNumber>;

    push(
      _value: BytesLike,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;

    setExtraData(
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<BigNumber>;
  };

  populateTransaction: {
    "deleteElementsAfterInclusive(uint40,bytes27)"(
      _index: BigNumberish,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    "deleteElementsAfterInclusive(uint40)"(
      _index: BigNumberish,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    get(
      _index: BigNumberish,
      overrides?: CallOverrides
    ): Promise<PopulatedTransaction>;

    getExtraData(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    getLength(overrides?: CallOverrides): Promise<PopulatedTransaction>;

    push(
      _value: BytesLike,
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;

    setExtraData(
      _extraData: BytesLike,
      overrides?: Overrides & { from?: string | Promise<string> }
    ): Promise<PopulatedTransaction>;
  };
}
